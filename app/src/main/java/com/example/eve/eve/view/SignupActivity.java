package com.example.eve.eve.view;import android.os.Bundle;import android.support.annotation.NonNull;import android.support.v7.app.AppCompatActivity;import android.support.v7.widget.Toolbar;import android.text.TextUtils;import android.view.MenuItem;import android.view.View;import android.widget.Button;import android.widget.EditText;import android.widget.ProgressBar;import android.widget.Toast;import com.example.eve.eve.R;import com.google.android.gms.tasks.OnCompleteListener;import com.google.android.gms.tasks.Task;import com.google.firebase.auth.AuthResult;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.auth.FirebaseUser;import com.google.firebase.auth.UserProfileChangeRequest;public class SignupActivity extends AppCompatActivity {    private EditText inputName, inputEmail, inputPassword, inputPassword2;    private Button btnSignIn, btnSignUp;    private ProgressBar progressBar;    private FirebaseAuth auth;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_signup);        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);        setSupportActionBar(toolbar);        getSupportActionBar().setDisplayHomeAsUpEnabled(true);        //Get Firebase auth instance        auth = FirebaseAuth.getInstance();        inputName = (EditText) findViewById(R.id.name);        btnSignIn = (Button) findViewById(R.id.sign_in_button);        btnSignUp = (Button) findViewById(R.id.sign_up_button);        inputEmail = (EditText) findViewById(R.id.email);        inputPassword = (EditText) findViewById(R.id.password);        inputPassword2 = (EditText) findViewById(R.id.password2);        progressBar = (ProgressBar) findViewById(R.id.progressBar);        btnSignIn.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                finish();            }        });        btnSignUp.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                String name = inputName.getText().toString().trim();                String email = inputEmail.getText().toString().trim();                String password = inputPassword.getText().toString();                String password2 = inputPassword2.getText().toString();                if (TextUtils.isEmpty(name)) {                    Toast.makeText(getApplicationContext(), "Insira um nome!", Toast.LENGTH_SHORT).show();                    return;                }                if (TextUtils.isEmpty(email)) {                    Toast.makeText(getApplicationContext(), "Insira um email!", Toast.LENGTH_SHORT).show();                    return;                }                if (TextUtils.isEmpty(password)) {                    Toast.makeText(getApplicationContext(), "Insira uma senha!", Toast.LENGTH_SHORT).show();                    return;                }                if (!password.equals(password2)) {                    Toast.makeText(getApplicationContext(), "Senhas não correspondem!", Toast.LENGTH_SHORT).show();                    return;                }                if (password.length() < 6) {                    Toast.makeText(getApplicationContext(), "Senha muito pequena, insira mínimo 6 caracteres!", Toast.LENGTH_SHORT).show();                    return;                }                progressBar.setVisibility(View.VISIBLE);                //create user                auth.createUserWithEmailAndPassword(email, password)                        .addOnCompleteListener(SignupActivity.this, new OnCompleteListener<AuthResult>() {                            @Override                            public void onComplete(@NonNull Task<AuthResult> task) {                                progressBar.setVisibility(View.GONE);                                // If sign in fails, display a message to the user. If sign in succeeds                                // the auth state listener will be notified and logic to handle the                                // signed in user can be handled in the listener.                                if (!task.isSuccessful()) {                                    Toast.makeText(SignupActivity.this, "Autenticação falhou." + task.getException(),                                            Toast.LENGTH_SHORT).show();                                } else {                                    createFirebaseUserProfile(task.getResult().getUser());                                    Toast.makeText(getApplicationContext(), "Usuário criado com sucesso!", Toast.LENGTH_SHORT).show();                                    finish();                                }                            }                        });            }        });    }    private void createFirebaseUserProfile(FirebaseUser user) {        UserProfileChangeRequest addProfileName = new UserProfileChangeRequest.Builder()                .setDisplayName(inputName.getText().toString())                .build();        user.updateProfile(addProfileName)                .addOnCompleteListener(new OnCompleteListener<Void>() {                    @Override                    public void onComplete(@NonNull Task<Void> task) {                        if (task.isSuccessful()) {                        }                    }                });    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        switch (item.getItemId()) {            case android.R.id.home:                finish(); // Finaliza a Activity atual                break;            default:                break;        }        return true;    }    @Override    protected void onResume() {        super.onResume();        progressBar.setVisibility(View.GONE);    }    @Override    public void onStart() {        super.onStart();        // auth.addAuthStateListener(mAuthListener);    }    @Override    public void onStop() {        super.onStop();//        if (mAuthListener != null) {//            auth.removeAuthStateListener(mAuthListener);    }}